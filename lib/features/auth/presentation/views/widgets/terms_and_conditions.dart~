import 'package:flutter/material.dart';
import 'package:flutter/gestures.dart';

import '../../../../../core/utils/app_colors.dart';
import '../../../../../core/utils/app_styles.dart';
import '../../../../../core/utils/app_texts.dart';
import 'custom_check_box.dart';

class TermsAncConditions extends StatefulWidget {
  const TermsAncConditions({
    super.key,
    required this.onChanged,
  });
  final ValueChanged<bool> onChanged;

  @override
  State<TermsAncConditions> createState() => _TermsAncConditionsState();
}

class _TermsAncConditionsState extends State<TermsAncConditions> {
  bool isTermsAccepted = false;
  late TapGestureRecognizer _termsTapRecognizer;

  @override
  void initState() {
    super.initState();
    _termsTapRecognizer = TapGestureRecognizer();
  }

  @override
  void dispose() {
    _termsTapRecognizer.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 16),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          CustomCheckBox(
            isChecked: isTermsAccepted,
            onChecked: (bool value) {
              isTermsAccepted = value;
              widget.onChanged(value);
              setState(() {});
            },
          ),
          const SizedBox(width: 8),
          Expanded(
            child: Text.rich(
              TextSpan(
                children: [
                  TextSpan(
                    text: AppTexts.fromCreatinganAccount,
                    style: AppStyles.dinRegular16.copyWith(
                      color: AppColors.blackColor,
                    ),
                  ),
                  TextSpan(
                    text: AppTexts.youAreAccept,
                    style: AppStyles.dinRegular16.copyWith(
                      color: AppColors.blackColor,
                    ),
                  ),
                  TextSpan(
                    text: AppTexts.termsAndConditions,
                    style: AppStyles.dinRegular16.copyWith(
                      color: AppColors.primaryColor,
                    ),
                    recognizer: _termsTapRecognizer
                      ..onTap = () {
                        showDialog(
                          context: context,
                          builder: (BuildContext context) {
                            return AlertDialog(
                              title: const Text("الشروط والأحكام"),
                              content: const SingleChildScrollView(
                                child: Text(AppTexts.shorrot),
                              ),
                              actions: [
                                TextButton(
                                  onPressed: () => Navigator.pop(context),
                                  child: const Text("إغلاق"),
                                )
                              ],
                            );
                          },
                        );
                      },
                  ),
                  TextSpan(
                    text: AppTexts.privacyPolicy,
                    style: AppStyles.dinRegular16.copyWith(
                      color: AppColors.blackColor,
                    ),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}
