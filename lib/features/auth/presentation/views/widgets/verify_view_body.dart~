import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:ramadan_kitchen_management/core/utils/app_texts.dart';
import 'package:ramadan_kitchen_management/core/widgets/general_button.dart';
import 'package:ramadan_kitchen_management/core/routes/app_routes.dart';
import 'package:ramadan_kitchen_management/core/utils/app_colors.dart';
import 'package:ramadan_kitchen_management/core/utils/app_styles.dart';
import 'custom_otp_field.dart';

class VerifyViewBody extends StatefulWidget {
  final String phoneNumber;
  final String verificationId;

  const VerifyViewBody({
    super.key,
    required this.phoneNumber,
    required this.verificationId,
  });

  @override
  State<VerifyViewBody> createState() => _VerifyViewBodyState();
}

class _VerifyViewBodyState extends State<VerifyViewBody> {
  final TextEditingController _otpController = TextEditingController();
  bool _isLoading = false;
  String? _errorMessage;

  Future<void> _verifyOTP() async {
    if (_otpController.text.length != 6) {
      setState(
          () => _errorMessage = 'الرجاء إدخال رمز التحقق المكون من 6 أرقام');
      return;
    }

    setState(() {
      _isLoading = true;
      _errorMessage = null;
    });

    try {
      final credential = PhoneAuthProvider.credential(
        verificationId: widget.verificationId,
        smsCode: _otpController.text,
      );

      await FirebaseAuth.instance.signInWithCredential(credential);
      if (mounted) {
        Navigator.pushNamed(context, AppRoutes.resetPassword);
      }
    } on FirebaseAuthException catch (e) {
      setState(() => _errorMessage = _getErrorMessage(e.code));
    } finally {
      if (mounted) setState(() => _isLoading = false);
    }
  }

  String _getErrorMessage(String code) {
    switch (code) {
      case 'invalid-verification-code':
        return 'رمز التحقق غير صحيح';
      case 'session-expired':
        return 'انتهت صلاحية الجلسة، الرجاء إعادة المحاولة';
      default:
        return 'حدث خطأ أثناء التحقق، الرجاء المحاولة لاحقاً';
    }
  }

  Future<void> _resendOTP() async {
    setState(() {
      _isLoading = true;
      _errorMessage = null;
    });

    try {
      await FirebaseAuth.instance.verifyPhoneNumber(
        phoneNumber: widget.phoneNumber,
        verificationCompleted: (credential) {},
        verificationFailed: (e) {
          setState(() => _errorMessage = _getErrorMessage(e.code));
        },
        codeSent: (newVerificationId, _) {
          if (mounted) {
            Navigator.pushReplacement(
              context,
              MaterialPageRoute(
                builder: (context) => VerifyViewBody(
                  phoneNumber: widget.phoneNumber,
                  verificationId: newVerificationId,
                ),
              ),
            );
          }
        },
        codeAutoRetrievalTimeout: (verificationId) {},
      );
    } catch (e) {
      setState(() => _errorMessage = 'حدث خطأ غير متوقع');
    } finally {
      if (mounted) setState(() => _isLoading = false);
    }
  }

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      child: Column(
        children: [
          SizedBox(height: MediaQuery.of(context).size.height * .05),
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 24),
            child: Align(
              alignment: Alignment.centerRight,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.end,
                children: [
                  Text(
                    AppTexts.reEnterRamzThatWeSent,
                    style: AppStyles.dinRegular16.copyWith(
                      color: AppColors.blackColor,
                    ),
                  ),
                  Text(
                    _formatPhoneNumber(widget.phoneNumber),
                    style: AppStyles.dinRegular16.copyWith(
                        color: AppColors.primaryColor,
                        fontWeight: FontWeight.bold),
                  ),
                ],
              ),
            ),
          ),
          const SizedBox(height: 32),
          Directionality(
            textDirection: TextDirection.ltr,
            child:  CustomOtpField(
              controller: _otpController,
              onChanged: (value) => setState(() {}),
            )
          ),
          if (_errorMessage != null)
            Padding(
              padding: const EdgeInsets.symmetric(vertical: 8),
              child: Text(
                _errorMessage!,
                style: TextStyle(color: Colors.red, fontSize: 14),
              ),
            ),
          const SizedBox(height: 32),
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16),
            child: GeneralButton(
              onPressed: _isLoading ? null : _verifyOTP,
              text: _isLoading ? 'جارِ التحقق...' : AppTexts.verifyYourRamz,
              backgroundColor: AppColors.primaryColor,
              textColor: AppColors.whiteColor,
            ),
          ),
          const SizedBox(height: 16),
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16),
            child: GeneralButton(
              onPressed: _isLoading ? null : _resendOTP,
              text: AppTexts.resendRamz,
              textColor: AppColors.primaryColor,
              backgroundColor: AppColors.whiteColor,
            ),
          ),
          const SizedBox(height: 16)
        ],
      ),
    );
  }
}

String _formatPhoneNumber(String phone) {
  if (phone.startsWith('+2')) {
    return '+20 ${phone.substring(3, 6)} ${phone.substring(6, 10)} ${phone.substring(10)}';
  }
  return phone;
}
